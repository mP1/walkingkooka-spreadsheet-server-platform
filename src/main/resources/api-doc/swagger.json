{
  "openapi": "3.0.0",
  "info": {
    "title": "walkingkooka-spreadsheet-server",
    "version": "v1.0.0"
  },
  "paths": {
    "/api/plugin/*?offset={offset}&count={count}": {
      "get": {
        "tags": [
          "plugin"
        ],
        "summary": "Gets all the plugins for the requested range",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/plugin/*/filter?query={query}&offset={offset}&count={count}": {
      "get": {
        "tags": [
          "plugin"
        ],
        "summary": "A filtered view of plugins that match the query",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/plugin/*/upload": {
      "post": {
        "tags": [
          "plugin"
        ],
        "summary": "Upload a plugin creating a new plugin or replacing an existing",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "multipart/form-data": {
              "schema": {
                "type:": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "text/base64": {
              "schema": {
                "type": "string",
                "format": "base64",
                "example": ""
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accept",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Accept"
            }
          },
          {
            "name": "content-disposition",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ContentDisposition"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plugin"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/plugin/{plugin-name}": {
      "delete": {
        "tags": [
          "plugin"
        ],
        "summary": "Deletes an existing Plugin using its name",
        "parameters": [
          {
            "name": "plugin-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PluginName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "plugin"
        ],
        "summary": "Retrieves a plugin given its name",
        "parameters": [
          {
            "name": "plugin-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PluginName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plugin"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "plugin"
        ],
        "summary": "Saves a new or updates a Plugin",
        "parameters": [
          {
            "name": "plugin-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PluginName"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Plugin"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plugin"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/plugin/{plugin-name}/download": {
      "get": {
        "tags": [
          "plugin"
        ],
        "summary": "Download the plugin archive",
        "parameters": [
          {
            "name": "plugin-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PluginName"
            }
          },
          {
            "name": "accept",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Accept"
            }
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "200 OK"
          },
          "204": {
            "description": "204 No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/plugin/{plugin-name}/download/{path}": {
      "get": {
        "tags": [
          "plugin"
        ],
        "summary": "Download file within the plugin archive",
        "parameters": [
          {
            "name": "plugin-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PluginName"
            }
          },
          {
            "name": "path",
            "in": "path",
            "required": false,
            "default": "",
            "minLength": 0,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Accept"
            }
          }
        ],
        "produces": [
          "application/octet-stream",
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "200 OK"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/plugin/{plugin-name}/list": {
      "get": {
        "tags": [
          "plugin"
        ],
        "summary": "Lists of all the file/directory entries in the plugin archive",
        "parameters": [
          {
            "name": "plugin-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PluginName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JarEntryInfoList"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet": {
      "post": {
        "tags": [
          "spreadsheet"
        ],
        "summary": "Creates a new empty spreadsheet",
        "description": "Note the request BODY must be empty",
        "requestBody": {
          "required": false
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "201 CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetMetadata"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/*?offset={offset}&count={count}": {
      "get": {
        "tags": [
          "spreadsheet"
        ],
        "summary": "Gets all the metadata entries for the given range",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetMetadataSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}": {
      "delete": {
        "tags": [
          "spreadsheet"
        ],
        "summary": "Deletes an existing spreadsheet using its ID",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "spreadsheet"
        ],
        "summary": "Retrieves metadata about a spreadsheet given its id",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetMetadata"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "spreadsheet"
        ],
        "summary": "Updates the metadata of the given spreadsheet.",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpreadsheetMetadata"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetMetadata"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "spreadsheet"
        ],
        "summary": "Updates the metadata of the given spreadsheet.",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpreadsheetMetadata"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetMetadata"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/cell/*/{cell-evaluation-mode}": {
      "get": {
        "tags": [
          "cell"
        ],
        "summary": "Gets all the cells that would fit the given viewport",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "cell-evaluation-mode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "clear-value-error-skip-evaluate",
                "compute-if-necessary",
                "force-recompute",
                "skip-evaluate"
              ]
            }
          },
          {
            "name": "home",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "height",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "includeFrozenColumnsRows",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "selectionType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "cell",
                "cell-range",
                "column",
                "column-range",
                "row",
                "row-range"
              ]
            }
          },
          {
            "name": "selection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "properties",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/cell/{cell-OR-cell-range-OR-label}/{cell-evaluation-mode}": {
      "get": {
        "tags": [
          "cell"
        ],
        "summary": "Gets the cells",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "cell-OR-cell-range-OR-label",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cell-evaluation-mode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "clear-value-error-skip-evaluate",
                "compute-if-necessary",
                "force-recompute",
                "skip-evaluate"
              ]
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/cell/{cell-OR-cell-range-OR-label}": {
      "post": {
        "tags": [
          "cell"
        ],
        "summary": "Saves or replaces a cell",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "cell-OR-cell-range-OR-label",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpreadsheetDelta"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "cell"
        ],
        "summary": "Patches a cell using the provided delta",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "cell-OR-cell-range-OR-label",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpreadsheetDelta"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "cell"
        ],
        "summary": "Deletes a cell or range of cells",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "cell-OR-cell-range-OR-label",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/cell/{cell-OR-cell-range-OR-label}/fill": {
      "post": {
        "tags": [
          "cell"
        ],
        "summary": "Fills a cell or range of cells with the contents",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "cell-OR-cell-range-OR-label",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpreadsheetDelta"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/cell/{cell-OR-cell-range-OR-label}/find": {
      "get": {
        "tags": [
          "cell"
        ],
        "summary": "Finds all cells within the selection that match the value type and query expression",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "cell-OR-cell-range-OR-label",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cell-range-path",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "LRTD",
                "RLTD",
                "LRBU",
                "RLBU",
                "TDLR",
                "TDRL",
                "BULR",
                "BURL"
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "min": 0
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "min": 0
            }
          },
          {
            "name": "value-type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "properties",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/cell/{cell-OR-cell-range-OR-label}/labels": {
      "get": {
        "tags": [
          "cell"
        ],
        "summary": "Finds all labels with the given selection",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "cell-OR-cell-range-OR-label",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "min": 0
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "min": 0
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/cell/{cell-OR-cell-range-OR-label}/sort?comparators={comparators}": {
      "get": {
        "tags": [
          "cell"
        ],
        "summary": "Sorts the selected cells using the provided comparators",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "cell-OR-cell-range-OR-label",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comparators",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "column | row EQUALS-SIGN comparator-name COMMA last-comparator-name SEMI-COLON next column/row EQUALS-SIGN etc"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/column/{column-OR-column-range}": {
      "delete": {
        "tags": [
          "columns"
        ],
        "summary": "deletes the column or column-range",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "column-OR-column-range",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "columns"
        ],
        "summary": "Updates the column of the given spreadsheet.",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpreadsheetDelta"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/column/{column-OR-column-range}/clear": {
      "post": {
        "tags": [
          "columns"
        ],
        "summary": "clears the column or column-range, which includes deleting any cells",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "column-OR-column-range",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/column/{column-OR-column-range}/after?count={count}": {
      "post": {
        "tags": [
          "columns"
        ],
        "summary": "Inserts a given number of columns *after* the given column or column-range",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "column-OR-column-range",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/column/{column-OR-column-range}/before?count={count}": {
      "post": {
        "tags": [
          "columns"
        ],
        "summary": "Inserts a given number of columns *before* the given column or column-range",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "column-OR-column-range",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/comparator": {
      "get": {
        "tags": [
          "comparators"
        ],
        "summary": "Returns ALL SpreadsheetComparator available to the enclosing Spreadsheet",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetComparatorInfoSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/comparator/{spreadsheet-comparator-name}": {
      "get": {
        "tags": [
          "comparators"
        ],
        "summary": "Returns the named SpreadsheetComparatorInfo if available to the enclosing Spreadsheet",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "spreadsheet-comparator-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetComparatorName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetComparatorInfo"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/converter": {
      "get": {
        "tags": [
          "converters"
        ],
        "summary": "Returns ALL Converter available to the enclosing Spreadsheet",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConverterInfoSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/converter/{converter-name}": {
      "get": {
        "tags": [
          "converters"
        ],
        "summary": "Returns the named ConverterInfo if available to the enclosing Spreadsheet",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "converter-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ConverterName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConverterInfo"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/exporter": {
      "get": {
        "tags": [
          "exporters"
        ],
        "summary": "Returns ALL SpreadsheetExporter available to the enclosing Spreadsheet",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetExporterInfoSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/exporter/{spreadsheet-exporter-name}": {
      "get": {
        "tags": [
          "exporters"
        ],
        "summary": "Returns the named SpreadsheetExporterInfo if available to the enclosing Spreadsheet",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "spreadsheet-exporter-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetExporterName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetExporterInfo"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/formatter": {
      "get": {
        "tags": [
          "formatters"
        ],
        "summary": "Returns ALL SpreadsheetFormatter available to the enclosing Spreadsheet",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetFormatterInfoSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/formatter/{spreadsheet-formatter-name}": {
      "get": {
        "tags": [
          "formatters"
        ],
        "summary": "Returns the named SpreadsheetFormatterInfo if available to the enclosing Spreadsheet",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "spreadsheet-formatter-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetFormatterName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetFormatterInfo"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/formatter/{spreadsheet-formatter-name}/next-token": {
      "post": {
        "tags": [
          "formatters"
        ],
        "summary": "Accepts a request containing SpreadsheetFormatterSelector returning the next SpreadsheetFormatterSelectorToken",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "spreadsheet-formatter-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetFormatterName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonString"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetFormatterSelectorToken"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/formatter/{spreadsheet-formatter-name}/samples": {
      "get": {
        "tags": [
          "formatters"
        ],
        "summary": "Formats the sample values for the given SpreadsheetFormatter",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "spreadsheet-formatter-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetFormatterName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetFormatterSampleList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/formatter/{spreadsheet-formatter-name}/tokens": {
      "post": {
        "tags": [
          "formatters"
        ],
        "summary": "Accepts a request containing SpreadsheetFormatterSelector returning the SpreadsheetFormatterSelectorToken(s)",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "spreadsheet-formatter-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetFormatterName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonString"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetFormatterSelectorTokenList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/formatter/*/edit": {
      "post": {
        "tags": [
          "formatters"
        ],
        "summary": "Parses the request body holding a SpreadsheetFormatterSelector and gives an error message, tokens, next and samples",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonString"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetFormatterSelectorEdit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/formatter/*/format": {
      "post": {
        "tags": [
          "formatters"
        ],
        "summary": "Accepts a request containing SpreadsheetFormatterSelector",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpreadsheetFormatterFormatRequestList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextNodeList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/formatter/*/menu": {
      "get": {
        "tags": [
          "formatters"
        ],
        "summary": "Gives all the menus for all SpreadsheetFormatters",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetFormatterSelectorMenuList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/function": {
      "get": {
        "tags": [
          "functions"
        ],
        "summary": "Returns ALL ExpressionFunction(s) available to the enclosing Spreadsheet",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressionFunctionInfoSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/function/{function-name}": {
      "get": {
        "tags": [
          "functions"
        ],
        "summary": "Returns the named ExpressionFunctionInfo if available to the enclosing Spreadsheet",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "function-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FunctionExpressionName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressionFunctionInfo"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/importer": {
      "get": {
        "tags": [
          "importers"
        ],
        "summary": "Returns ALL SpreadsheetImporter available to the enclosing Spreadsheet",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetImporterInfoSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/importer/{spreadsheet-importer-name}": {
      "get": {
        "tags": [
          "importers"
        ],
        "summary": "Returns the named SpreadsheetImporterInfo if available to the enclosing Spreadsheet",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "spreadsheet-importer-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetImporterName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetImporterInfo"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/label/": {
      "post": {
        "tags": [
          "label"
        ],
        "summary": "Creates a new label.",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "201 CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/label/{label-name}": {
      "delete": {
        "tags": [
          "label"
        ],
        "summary": "Deletes an existing label using its name",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "label-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetDelta"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "label"
        ],
        "summary": "Loads the given label",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "label-name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "label"
        ],
        "summary": "Saves or updates the given label and its mapping target",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpreadsheetDelta"
              }
            }
          },
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "200 OK",
              "schema": {
                "$ref": "#/components/schemas/SpreadsheetDelta"
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "label"
          ],
          "summary": "Deletes the given label and its mapping target",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "200 OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SpreadsheetDelta"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/parser": {
      "get": {
        "tags": [
          "parsers"
        ],
        "summary": "Returns ALL Parser available to the enclosing Spreadsheet",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetParserInfoSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/parser/{spreadsheet-parser-name}": {
      "get": {
        "tags": [
          "parsers"
        ],
        "summary": "Returns the named SpreadsheetParserInfo if available to the enclosing Spreadsheet",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "spreadsheet-parser-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetParserName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetParserInfo"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/parser/{spreadsheet-parser-name}/next-token": {
      "post": {
        "tags": [
          "parsers"
        ],
        "summary": "Accepts a request containing SpreadsheetParserSelector returning the next SpreadsheetParserSelectorToken",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "spreadsheet-parser-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetParserName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonString"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetParserSelectorToken"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/parser/{spreadsheet-parser-name}/tokens": {
      "post": {
        "tags": [
          "parsers"
        ],
        "summary": "Accepts a request containing SpreadsheetParserSelector returning the SpreadsheetParserSelectorToken(s)",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "spreadsheet-parser-name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetParserName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonString"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetParserSelectorTokenList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/parser/*/edit": {
      "post": {
        "tags": [
          "parsers"
        ],
        "summary": "Parses the request body holding a SpreadsheetParserSelector and gives an error message, tokens, next and samples",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonString"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetParserSelectorEdit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/row/{row-OR-row-range}": {
      "delete": {
        "tags": [
          "rows"
        ],
        "summary": "deletes the row or row-range",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "row-OR-row-range",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "rows"
        ],
        "summary": "Updates a rows within the given spreadsheet.",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpreadsheetDelta"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/row/{row-OR-row-range}/clear": {
      "post": {
        "tags": [
          "rows"
        ],
        "summary": "clears the row or row-range, which includes deleting any cells",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "row-OR-row-range",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/row/{row-OR-row-range}/after?count={count}": {
      "post": {
        "tags": [
          "rows"
        ],
        "summary": "Inserts a given number of rows *after* the given row or row-range",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "row-OR-row-range",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/spreadsheet/{spreadsheet-id}/row/{row-OR-row-range}/before?count={count}": {
      "post": {
        "tags": [
          "rows"
        ],
        "summary": "Inserts a given number of rows *before* the given row or row-range",
        "parameters": [
          {
            "name": "spreadsheet-id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpreadsheetId"
            }
          },
          {
            "name": "row-OR-row-range",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpreadsheetDelta"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Accept": {
        "type": "string",
        "example": "*/*"
      },
      "Binary": {
        "type": "string",
        "format": "base64"
      },
      "ContentDisposition": {
        "type": "string",
        "example": "attachment; filename=\"file.txt\""
      },
      "ConverterName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[A-Z,a-z][A-Z,a-z,0-9,-]*$",
        "example": "general"
      },
      "ConverterInfoSet": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/ConverterInfo"
        }
      },
      "ConverterInfo": {
        "type": "string",
        "example": "https://github.com/mP1/walkingkooka-spreadsheet/Converter/general general"
      },
      "DateTime": {
        "type": "string",
        "format": "date-time",
        "example": "1999-12-31T12:58:59"
      },
      "EmailAddress": {
        "type": "string",
        "format": "email",
        "example": "user@example.com"
      },
      "ExpressionFunctionInfoSet": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/ExpressionFunctionInfo"
        }
      },
      "ExpressionFunctionInfo": {
        "type": "string",
        "example": "https://github.com/mP1/walkingkooka-spreadsheet-server-expression-function/abs abs"
      },
      "FunctionExpressionName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[A-Z,a-z][A-Z,a-z,0-9,-]*$",
        "example": "abs"
      },
      "JarEntryInfo": {
        "type": "object",
        "properties": {
          "name": {
            "$ref" : "#/components/schemas/JarEntryInfoName"
          },
          "size": {
            "type": "integer"
          },
          "compressedSize": {
            "type": "integer"
          },
          "method": {
            "type": "integer"
          },
          "crc": {
            "type": "integer"
          },
          "create": {
            "$ref" : "#/components/schemas/DateTime"
          },
          "lastModified": {
            "$ref" : "#/components/schemas/DateTime"
          }
        }
      },
      "JarEntryInfoList": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/JarEntryInfo"
        }
      },
      "JarEntryInfoName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^/*$",
        "example": "/META-INF/MANIFEST.MF"
      },
      "JsonString": {
        "type": "string"
      },
      "Plugin": {
        "type": "object",
        "properties": {
          "name": {
            "$ref" : "#/components/schemas/PluginName"
          },
          "filename": {
            "type": "string",
            "example": "archive.jar"
          },
          "archive": {
            "$ref" : "#/components/schemas/Binary"
          },
          "user": {
            "$ref" : "#/components/schemas/EmailAddress"
          },
          "timestamp": {
            "$ref" : "#/components/schemas/DateTime"
          }
        }
      },
      "PluginName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[A-Z,a-z][A-Z,a-z,0-9,-]*$",
        "example": "TestPlugin123"
      },
      "PluginSet": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/Plugin"
        }
      },
      "SpreadsheetComparatorName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[A-Z,a-z][A-Z,a-z,0-9,-]*$",
        "example": "day-of-month"
      },
      "SpreadsheetComparatorInfoSet": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/SpreadsheetComparatorInfo"
        }
      },
      "SpreadsheetComparatorInfo": {
        "type": "string",
        "example": "https://github.com/mP1/walkingkooka-spreadsheet/SpreadsheetComparator/date date"
      },
      "SpreadsheetDelta": {
        "type": "object"
      },
      "SpreadsheetExporterName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[A-Z,a-z][A-Z,a-z,0-9,-]*$",
        "example": "json"
      },
      "SpreadsheetExporterInfoSet": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/SpreadsheetExporterInfo"
        }
      },
      "SpreadsheetExporterInfo": {
        "type": "string",
        "example": "https://github.com/mP1/walkingkooka-spreadsheet/SpreadsheetExporter/json json"
      },
      "SpreadsheetFormatterInfoSet": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/SpreadsheetFormatterInfo"
        }
      },
      "SpreadsheetFormatterInfo": {
        "type": "object",
        "example": "https://github.com/mP1/walkingkooka-spreadsheet/SpreadsheetFormatter/general general"
      },
      "SpreadsheetFormatterFormatRequestList": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/SpreadsheetFormatterFormatRequest"
        }
      },
      "SpreadsheetFormatterFormatRequest": {
        "type": "object",
        "properties": {
          "selector": {
            "$ref" : "#/components/schemas/SpreadsheetFormatterSelector"
          },
          "value": {
            "type": "object"
          }
        }
      },
      "SpreadsheetFormatterName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[A-Z,a-z][A-Z,a-z,0-9,-]*$",
        "example": "date-time-format-pattern"
      },
      "SpreadsheetFormatterSampleList": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/SpreadsheetFormatterSample"
        }
      },
      "SpreadsheetFormatterSample": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "selector": {
            "$ref" : "#/components/schemas/SpreadsheetFormatterSelector"
          },
          "value": {
            "type": "object"
          }
        }
      },
      "SpreadsheetFormatterSelector": {
        "type": "string",
        "example": "date-time-format-pattern yyyy/mm/dd hh:mm:ss"
      },
      "SpreadsheetFormatterSelectorEdit": {
        "properties": {
          "selector": {
            "$ref" : "#/components/schemas/SpreadsheetFormatterSelector"
          },
          "message": {
            "type": "string"
          },
          "tokens": {
            "$ref" : "#/components/schemas/SpreadsheetFormatterSelectorTokenList"
          },
          "next": {
            "$ref" : "#/components/schemas/SpreadsheetFormatterSelectorTokenAlternative"
          },
          "samples": {
            "$ref" : "#/components/schemas/SpreadsheetFormatterSampleList"
          }
        }
      },
      "SpreadsheetFormatterSelectorMenuList": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/SpreadsheetFormatterSelectorMenuList"
        }
      },
      "SpreadsheetFormatterSelectorMenu": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "selector": {
            "$ref" : "#/components/schemas/SpreadsheetFormatterSelector"
          },
          "value": {
            "type": "object"
          }
        }
      },
      "SpreadsheetFormatterSelectorTokenList": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/SpreadsheetFormatterSelectorToken"
        }
      },
      "SpreadsheetFormatterSelectorToken": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "alternatives": {
            "$ref" : "#/components/schemas/SpreadsheetFormatterSelectorTokenAlternative"
          }
        }
      },
      "SpreadsheetFormatterSelectorTokenAlternative": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "SpreadsheetId": {
        "type": "string",
        "minLength": 1,
        "pattern": "^[0123456789ABCDEFabcdef]*$",
        "example": "1"
      },
      "SpreadsheetImporterName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[A-Z,a-z][A-Z,a-z,0-9,-]*$",
        "example": "json"
      },
      "SpreadsheetImporterInfoSet": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/SpreadsheetImporterInfo"
        }
      },
      "SpreadsheetImporterInfo": {
        "type": "string",
        "example": "https://github.com/mP1/walkingkooka-spreadsheet/SpreadsheetImporter/json json"
      },
      "SpreadsheetLabelName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[A-Z,a-z,_][A-Z,a-z,0-9,-,_,.]*$",
        "example": "Label123"
      },
      "SpreadsheetMetadata": {
        "type": "object"
      },
      "SpreadsheetMetadataSet": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/SpreadsheetMetadata"
        }
      },
      "SpreadsheetParserName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[A-Z,a-z][A-Z,a-z,0-9,-]*$",
        "example": "date-time-parse-pattern"
      },
      "SpreadsheetParserInfoSet": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/SpreadsheetParserInfo"
        }
      },
      "SpreadsheetParserInfo": {
        "type": "string",
        "example": "https://github.com/mP1/walkingkooka-spreadsheet/SpreadsheetParser/date-parse-pattern date-parse-pattern"
      },
      "SpreadsheetParserSelector": {
        "type": "string",
        "example": "date-time-parse-pattern yyyy/mm/dd hh:mm:ss"
      },
      "SpreadsheetParserSelectorEdit": {
        "properties": {
          "selector": {
            "$ref" : "#/components/schemas/SpreadsheetParserSelector"
          },
          "message": {
            "type": "string"
          },
          "tokens": {
            "$ref" : "#/components/schemas/SpreadsheetParserSelectorTokenList"
          },
          "next": {
            "$ref" : "#/components/schemas/SpreadsheetParserSelectorTokenAlternative"
          },
          "samples": {
            "$ref" : "#/components/schemas/SpreadsheetFormatterSampleList"
          }
        }
      },
      "SpreadsheetParserSelectorTokenList": {
        "type": "array",
        "items": {
          "$ref" : "#/components/schemas/SpreadsheetParserSelectorToken"
        }
      },
      "SpreadsheetParserSelectorToken": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "alternatives": {
            "$ref" : "#/components/schemas/SpreadsheetParserSelectorTokenAlternative"
          }
        }
      },
      "SpreadsheetParserSelectorTokenAlternative": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "TextNodeList": {
        "type": "array",
        "items": {
          "type" : "object"
        }
      }
    }
  }
}
